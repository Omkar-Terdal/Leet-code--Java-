class Solution {
    public int longestConsecutive(int[] nums) {
        int n=nums.length;
         if(n==0){
             return 0;
         }
    int longest=1;
    HashSet<Integer> set=new HashSet<>();
    for(int i=0; i<n; i++){
        set.add(nums[i]);
    }

    for(int value:set){
        if(!set.contains(value-1)){     //i-1 is not there in set then is would be starting number
        int count=1;
        int x=value;
         while(set.contains(x+1)){   //check next element       
            x =x+1;
            count=count+1;
            }
        longest= Math.max(longest,count);
        }
    }
    return longest;
    }
}


//TC: O(3N) for ordered set , O(nlogn) unordered set
//sc : O(N)
